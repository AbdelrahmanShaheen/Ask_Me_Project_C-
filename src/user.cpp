#include "user.h"

void User::SetId(const int &id) {
    this->id = id; //the id is Generated by default so i`ll not validate it
}

int User::GetId() const {
    return this->id;
}

void User::SetName(const string &name) {

    for (auto it : name) {
        if (!isalpha(it) && it != '_')
            throw invalid_argument(
                    "Your name must contain only chars a -> b and '_' to separate first name from last name");
    }
    this->name = name;
}

string User::GetName() const {
    return this->name;
}

void User::SetUserName(const string &userName) {
    for (auto it : userName) {
        if (!isalpha(it))
            throw invalid_argument("Your name must contain only chars a -> b AND no spaces");
    }
    this->userName = userName;
}

string User::GetUserName() const {
    return this->userName;
}

void User::SetEmail(const string &email) {
    if ((email.size() > 10) && (email.substr(email.size() - 10) == "@gmail.com"))
        this->email = email;
    else
        throw invalid_argument(
                "You can only enter a gmail account in the system and this email must contain greater than 10 letters");
}

string User::GetEmail() const {
    return this->email;
}

void User::SetPassword(const string &password) {
    for (auto it : password) {
        if (it < 48 || it > 57)
            throw invalid_argument("Your password must contain only numbers from 0 -> 9");
    }
    this->password = password;
}

string User::GetPassword() const {
    return this->password;
}


void User::SetAnonymous(const int &anonymous) {
    if (anonymous == 0 || anonymous == 1)
        anonymousQuestion = anonymous;
    else
        throw invalid_argument("The value must be '1' or '0'");
}

int User::GetAnonymous() const {
    return anonymousQuestion;
}